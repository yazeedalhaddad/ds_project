# -*- coding: utf-8 -*-
"""snowdepth_vs_months.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x6nuiZGtik9Sr8W0g1yy2CmcPes4r_AV
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from datetime import datetime

# Read the CSV file from your drive
csv_file_path = '/content/drive/MyDrive/Dataset for Introduction to Data Science/Mini Project DataSet/snow_depth_output.xlsx - Sheet1.csv'
  # Replace with your actual file path

# Read the CSV file
df = pd.read_csv(csv_file_path)

# Combine Date and Time columns to create a datetime column
df['DateTime'] = pd.to_datetime(df['Date'] + ' ' + df['Time'])

# Extract useful time components
df['Month'] = df['DateTime'].dt.month
df['MonthName'] = df['DateTime'].dt.strftime('%b')
df['Day'] = df['DateTime'].dt.day
df['Hour'] = df['DateTime'].dt.hour

# Create a figure with multiple subplots
fig = plt.figure(figsize=(16, 10))

# 1. Full Time Series Plot
ax1 = plt.subplot(3, 2, (1, 2))
ax1.plot(df['DateTime'], df['SnowDepth'], linewidth=1.5, color='steelblue')
ax1.fill_between(df['DateTime'], df['SnowDepth'], alpha=0.3, color='steelblue')
ax1.set_xlabel('Date', fontsize=11, fontweight='bold')
ax1.set_ylabel('Snow Depth', fontsize=11, fontweight='bold')
ax1.set_title('Snow Depth Over Time (Full Timeline)', fontsize=13, fontweight='bold')
ax1.grid(True, alpha=0.3)
plt.xticks(rotation=45, ha='right')

# 2. Monthly Average Snow Depth (Bar Chart)
ax2 = plt.subplot(3, 2, 3)
monthly_avg = df.groupby('Month')['SnowDepth'].mean().sort_index()
month_names = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
colors = ['#08519c' if val == monthly_avg.max() else '#3182bd' if val > monthly_avg.mean() else '#9ecae1'
          for val in monthly_avg.values]
ax2.bar(range(len(monthly_avg)), monthly_avg.values, color=colors, edgecolor='black', linewidth=0.5)
ax2.set_xticks(range(len(monthly_avg)))
ax2.set_xticklabels([month_names[i-1] for i in monthly_avg.index], fontweight='bold')
ax2.set_ylabel('Avg Snow Depth', fontsize=10, fontweight='bold')
ax2.set_title('Average Snow Depth by Month', fontsize=12, fontweight='bold')
ax2.grid(True, alpha=0.3, axis='y')

# 3. Monthly Maximum Snow Depth (Bar Chart)
ax3 = plt.subplot(3, 2, 4)
monthly_max = df.groupby('Month')['SnowDepth'].max().sort_index()
colors_max = ['#d62728' if val == monthly_max.max() else '#ff7f0e' if val > monthly_max.mean() else '#ffbb78'
              for val in monthly_max.values]
ax3.bar(range(len(monthly_max)), monthly_max.values, color=colors_max, edgecolor='black', linewidth=0.5)
ax3.set_xticks(range(len(monthly_max)))
ax3.set_xticklabels([month_names[i-1] for i in monthly_max.index], fontweight='bold')
ax3.set_ylabel('Max Snow Depth', fontsize=10, fontweight='bold')
ax3.set_title('Maximum Snow Depth by Month', fontsize=12, fontweight='bold')
ax3.grid(True, alpha=0.3, axis='y')

# 4. Heatmap: Snow Depth by Month and Day
ax4 = plt.subplot(3, 2, 5)
pivot_data = df.groupby(['Month', 'Day'])['SnowDepth'].mean().reset_index()
pivot_table = pivot_data.pivot(index='Day', columns='Month', values='SnowDepth')
sns.heatmap(pivot_table, cmap='Blues', cbar_kws={'label': 'Snow Depth'}, ax=ax4, linewidths=0.5)
ax4.set_xlabel('Month', fontsize=10, fontweight='bold')
ax4.set_ylabel('Day of Month', fontsize=10, fontweight='bold')
ax4.set_title('Snow Depth Heatmap (Month vs Day)', fontsize=12, fontweight='bold')
ax4.set_xticklabels([month_names[int(x.get_text())-1] for x in ax4.get_xticklabels()], rotation=0)

# 5. Box Plot by Month
ax5 = plt.subplot(3, 2, 6)
df_sorted = df.sort_values('Month')
month_labels = [month_names[m-1] for m in sorted(df['Month'].unique())]
bp = ax5.boxplot([df[df['Month'] == m]['SnowDepth'].values for m in sorted(df['Month'].unique())],
                  labels=month_labels, patch_artist=True, showfliers=True)
for patch in bp['boxes']:
    patch.set_facecolor('#6baed6')
    patch.set_edgecolor('black')
ax5.set_ylabel('Snow Depth', fontsize=10, fontweight='bold')
ax5.set_xlabel('Month', fontsize=10, fontweight='bold')
ax5.set_title('Snow Depth Distribution by Month (Box Plot)', fontsize=12, fontweight='bold')
ax5.grid(True, alpha=0.3, axis='y')

plt.tight_layout()
plt.show()

# Print detailed statistics
print("\n" + "="*60)
print("WINTER SEASON ANALYSIS - SNOW DEPTH SUMMARY")
print("="*60)

monthly_stats = df.groupby('Month')['SnowDepth'].agg(['mean', 'max', 'min', 'std']).round(2)
monthly_stats.index = [month_names[i-1] for i in monthly_stats.index]

print("\nMonthly Statistics:")
print(monthly_stats.to_string())

print("\n" + "-"*60)
print("PEAK WINTER MONTHS:")
print("-"*60)
top_3_months = monthly_avg.nlargest(3)
for i, (month, avg_depth) in enumerate(top_3_months.items(), 1):
    max_depth = df[df['Month'] == month]['SnowDepth'].max()
    print(f"{i}. {month_names[month-1]}: Avg = {avg_depth:.2f}, Max = {max_depth:.2f}")

print("\n" + "-"*60)
print("OVERALL STATISTICS:")
print("-"*60)
print(f"Highest Snow Depth: {df['SnowDepth'].max():.2f}")
max_date = df[df['SnowDepth'] == df['SnowDepth'].max()]['DateTime'].iloc[0]
print(f"Date of Highest Snow: {max_date.strftime('%Y-%m-%d %H:%M')}")
print(f"Average Snow Depth (All Year): {df['SnowDepth'].mean():.2f}")
print(f"Total Days with Snow (>0): {len(df[df['SnowDepth'] > 0])}")
print("="*60)